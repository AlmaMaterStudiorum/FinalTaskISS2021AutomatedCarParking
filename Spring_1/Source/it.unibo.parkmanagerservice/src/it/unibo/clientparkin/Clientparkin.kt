/* Generated by AN DISI Unibo */ 
package it.unibo.clientparkin

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Clientparkin ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "initstate"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		  var SLOTNUM = 0 
				var TOKENID = ""
				
		return { //this:ActionBasciFsm
				state("initstate") { //this:State
					action { //it:State
						println("Enter initstate")
					}
					 transition( edgeName="goto",targetState="waitfromcarrequest_ext_state", cond=doswitch() )
				}	 
				state("waitfromcarrequest_ext_state") { //this:State
					action { //it:State
						println("Enter waitfromcarrequest_ext_state")
					}
					 transition(edgeName="t00",targetState="waitforinform_int_state",cond=whenRequest("carrequest_ext"))
				}	 
				state("waitforinform_int_state") { //this:State
					action { //it:State
						println("Enter waitforinform_int_state")
						request("carrequest_int", "carrequest_int(X)" ,"statusactor" )  
					}
					 transition(edgeName="t01",targetState="waitforinform_int_state",cond=whenReply("informin_int"))
				}	 
				state("watiforcarenter_ext_state") { //this:State
					action { //it:State
						println("Enter watiforcarenter_ext_state")
						if( checkMsgContent( Term.createTerm("informin_int(SLOTNUM)"), Term.createTerm("informin_int(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 SLOTNUM = payloadArg(0).toInt()  
						}
						answer("carrequest_ext", "informin_ext", "SLOTNUM"   )  
					}
					 transition(edgeName="t02",targetState="waitforreceipt_int_state",cond=whenRequest("carenter_ext"))
				}	 
				state("waitforreceipt_int_state") { //this:State
					action { //it:State
						println("Enter waitforreceipt_int_state")
						request("carenter_int", "carenter_int(X)" ,"statusactor" )  
					}
					 transition(edgeName="t03",targetState="complete_state",cond=whenReply("receipt_int"))
				}	 
				state("complete_state") { //this:State
					action { //it:State
						println("Enter send_carenter_ext_state")
						if( checkMsgContent( Term.createTerm("receipt_int(TOKENID)"), Term.createTerm("receipt_int(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 TOKENID = payloadArg(0)  
						}
						answer("carenter_ext", "receipt_ext", "TOKENID"   )  
					}
					 transition( edgeName="goto",targetState="waitfromcarrequest_ext_state", cond=doswitch() )
				}	 
			}
		}
}
